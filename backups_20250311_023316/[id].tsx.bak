import React, { useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { FiClock, FiUsers, FiStar, FiBookOpen, FiAward, FiLock, FiCheck, FiPlay, FiDownload, FiChevronRight } from 'react-icons/fi';
import { WalletContextProvider, useWallet } from '../../contexts/WalletContext';

// Chinese comment replaced with English comment
const mockCourseData = {
  id: '1',
  title: 'Solana 区块链开发入门',
  description: '学习 Solana 区块链的基础知识，包括账户模型、交易处理和智能合约开发。本Course将帮助你从零开始构建 Solana 应用程序。',
  longDescription: '本Course将带你深入了解 Solana 区块链的核心概念和开发技术。你将学习 Solana 的账户模型、交易处理机制、Sealevel 并行执行引擎以及如何使用 Rust 编写智能合约。通过实际项目练习，你将掌握构建高性能去中心化应用的技能。',
  thumbnailUrl: '/images/courses/solana-intro.jpg',
  level: '初级',
  duration: 320, // Chinese comment replaced with English comment
  rating: 4.8,
  enrollmentCount: 1245,
  tokenReward: 150,
  category: '区块链开发',
  instructor: {
    name: '张三',
    avatar: '/images/avatars/instructor1.jpg',
    bio: 'Solana 核心开发者，拥有 5 年区块链开发经验',
  },
  prerequisites: [
    '基本的编程知识',
    'Rust 语言基础（推荐但不是必需）',
    '对区块链概念的基本理解'
  ],
  whatYouWillLearn: [
    'Solana 区块链的核心概念和架构',
    'Solana 账户模型和所有权系统',
    '使用 Rust 开发 Solana 智能合约',
    '构建和部署 Solana 程序',
    '与 Solana 程序交互的前端开发',
    '测试和调试 Solana 应用程序'
  ],
  modules: [
    {
      id: 'm1',
      title: '区块链和 Solana 简介',
      duration: 45,
      lessons: [
        { id: 'l1', title: '区块链技术概述', duration: 15, type: 'video', isCompleted: true },
        { id: 'l2', title: 'Solana 的独特优势', duration: 12, type: 'video', isCompleted: true },
        { id: 'l3', title: 'Solana 生态系统探索', duration: 18, type: 'video', isCompleted: false },
      ]
    },
    {
      id: 'm2',
      title: 'Solana 账户模型',
      duration: 60,
      lessons: [
        { id: 'l4', title: '账户结构和类型', duration: 20, type: 'video', isCompleted: false },
        { id: 'l5', title: '程序派生地址 (PDAs)', duration: 25, type: 'video', isCompleted: false },
        { id: 'l6', title: '账户模型实践', duration: 15, type: 'quiz', isCompleted: false },
      ]
    },
    {
      id: 'm3',
      title: 'Rust 编程基础',
      duration: 75,
      lessons: [
        { id: 'l7', title: 'Rust 语言入门', duration: 25, type: 'video', isCompleted: false },
        { id: 'l8', title: 'Rust 所有权系统', duration: 20, type: 'video', isCompleted: false },
        { id: 'l9', title: 'Error处理和测试', duration: 15, type: 'video', isCompleted: false },
        { id: 'l10', title: 'Rust 编程练习', duration: 15, type: 'exercise', isCompleted: false },
      ]
    },
    {
      id: 'm4',
      title: 'Solana 程序开发',
      duration: 90,
      lessons: [
        { id: 'l11', title: '创建你的第一个 Solana 程序', duration: 30, type: 'video', isCompleted: false },
        { id: 'l12', title: '指令处理和数据序列化', duration: 25, type: 'video', isCompleted: false },
        { id: 'l13', title: '跨程序调用 (CPIs)', duration: 20, type: 'video', isCompleted: false },
        { id: 'l14', title: '程序开发挑战', duration: 15, type: 'exercise', isCompleted: false },
      ]
    },
    {
      id: 'm5',
      title: '前端集成和项目实战',
      duration: 50,
      lessons: [
        { id: 'l15', title: '使用 Web3.js 与 Solana 交互', duration: 20, type: 'video', isCompleted: false },
        { id: 'l16', title: '构建完整的 DApp', duration: 30, type: 'video', isCompleted: false },
      ]
    },
  ],
  reviews: [
    {
      id: 'r1',
      user: '李四',
      avatar: '/images/avatars/user1.jpg',
      rating: 5,
      date: '2023-09-15',
      comment: '非常棒的Course！讲解清晰，示例丰富，帮助我快速入门 Solana 开发。'
    },
    {
      id: 'r2',
      user: '王五',
      avatar: '/images/avatars/user2.jpg',
      rating: 4,
      date: '2023-08-22',
      comment: 'Content全面，但有些概念讲解可以更深入。总体来说是很好的入门Course。'
    },
    {
      id: 'r3',
      user: '赵六',
      avatar: '/images/avatars/user3.jpg',
      rating: 5,
      date: '2023-07-30',
      comment: '作为一个区块链新手，这门Course让我对 Solana 有了清晰的认识。实践项目特别有帮助！'
    }
  ]
};

// Chinese comment replaced with English comment
const CourseDetailPage = () => {
  const router = useRouter();
  const { id } = router.query;
  const { connected, connectWallet } = useWallet();
  const [activeTab, setActiveTab] = useState('overview');
  const [expandedModules, setExpandedModules] = useState(['m1']);

  // Chinese comment replaced with English comment
  const course = mockCourseData;

  // Chinese comment replaced with English comment
  const toggleModule = (moduleId: string) => {
    if (expandedModules.includes(moduleId)) {
      setExpandedModules(expandedModules.filter(id => id !== moduleId));
    } else {
      setExpandedModules([...expandedModules, moduleId]);
    }
  };

  // Chinese comment replaced with English comment
  const calculateProgress = () => {
    const totalLessons = course.modules.reduce((acc, module) => acc + module.lessons.length, 0);
    const completedLessons = course.modules.reduce((acc, module) => 
      acc + module.lessons.filter(lesson => lesson.isCompleted).length, 0);
    
    return Math.round((completedLessons / totalLessons) * 100);
  };

  // Chinese comment replaced with English comment
  const formatDuration = (minutes: number) => {
    const hours = Math.floor(minutes / 60);
    const mins = minutes % 60;
    
    if (hours === 0) {
      return `${mins} 分钟`;
    } else if (mins === 0) {
      return `${hours} 小时`;
    } else {
      return `${hours} 小时 ${mins} 分钟`;
    }
  };

  // Chinese comment replaced with English comment
  const handleEnroll = async () => {
    if (!connected) {
      await connectWallet();
    } else {
      // Chinese comment replaced with English comment
      alert('恭喜！你已Success报名参加Course。');
    }
  };

  // Chinese comment replaced with English comment
  const getLessonIcon = (type: string) => {
    switch (type) {
      case 'video':
        return <FiPlay className="text-primary-500" />;
      case 'quiz':
        return <FiBookOpen className="text-yellow-500" />;
      case 'exercise':
        return <FiDownload className="text-green-500" />;
      default:
        return <FiBookOpen className="text-primary-500" />;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      <Head>
        <title>{course.title} | SoLearn</title>
        <meta name="description" content={course.description} />
      </Head>

      {/* Course头部 */}
      <div className="bg-gradient-to-r from-primary-600 to-primary-800 text-white">
        <div className="container mx-auto px-4 py-12">
          <div className="flex flex-col md:flex-row gap-8">
            {/* Course缩略图 */}
            <div className="w-full md:w-1/3 lg:w-1/4">
              <div className="rounded-xl overflow-hidden shadow-lg bg-white/10 backdrop-blur-sm">
                {course.thumbnailUrl ? (
                  <div className="relative aspect-video">
                    <Image 
                      src={course.thumbnailUrl} 
                      alt={course.title}
                      layout="fill"
                      objectFit="cover"
                    />
                  </div>
                ) : (
                  <div className="aspect-video bg-gray-700 flex items-center justify-center">
                    <FiBookOpen size={48} />
                  </div>
                )}
                <div className="p-4">
                  <div className="flex justify-between items-center mb-4">
                    <span className="bg-white/20 text-white px-3 py-1 rounded-full text-sm">
                      {course.level}
                    </span>
                    <span className="bg-white/20 text-white px-3 py-1 rounded-full text-sm">
                      {course.category}
                    </span>
                  </div>
                  <div className="flex items-center mb-2">
                    <FiClock className="mr-2" />
                    <span>{formatDuration(course.duration)}</span>
                  </div>
                  <div className="flex items-center mb-2">
                    <FiUsers className="mr-2" />
                    <span>{course.enrollmentCount} 名学员</span>
                  </div>
                  <div className="flex items-center">
                    <FiStar className="mr-2 text-yellow-300" />
                    <span>{course.rating} 评分</span>
                  </div>
                </div>
              </div>
              
              {/* 报名按钮 */}
              <div className="mt-6">
                <button
                  onClick={handleEnroll}
                  className="w-full py-3 px-6 bg-white text-primary-600 hover:bg-gray-100 rounded-lg font-medium transition-colors shadow-sm"
                >
                  {connected ? '报名参加Course' : '连接钱包报名'}
                </button>
                <div className="mt-4 text-center">
                  <div className="flex items-center justify-center">
                    <FiAward className="mr-2" />
                    <span>完成后获得 {course.tokenReward} $LEARN 代币</span>
                  </div>
                </div>
              </div>
            </div>
            
            {/* CourseInformation */}
            <div className="w-full md:w-2/3 lg:w-3/4">
              <h1 className="text-3xl md:text-4xl font-bold mb-4">{course.title}</h1>
              <p className="text-lg text-white/80 mb-6">{course.description}</p>
              
              {/* InstructorInformation */}
              <div className="flex items-center mb-8">
                <div className="w-12 h-12 rounded-full overflow-hidden mr-4">
                  {course.instructor.avatar ? (
                    <Image 
                      src={course.instructor.avatar} 
                      alt={course.instructor.name}
                      width={48}
                      height={48}
                      objectFit="cover"
                    />
                  ) : (
                    <div className="w-full h-full bg-gray-300 flex items-center justify-center">
                      <FiUser />
                    </div>
                  )}
                </div>
                <div>
                  <p className="font-medium">{course.instructor.name}</p>
                  <p className="text-sm text-white/70">{course.instructor.bio}</p>
                </div>
              </div>
              
              {/* 进度条（如果已报名） */}
              {connected && (
                <div className="mb-8">
                  <div className="flex justify-between mb-2">
                    <span>Course进度</span>
                    <span>{calculateProgress()}%</span>
                  </div>
                  <div className="w-full bg-white/20 rounded-full h-2.5">
                    <div 
                      className="bg-green-500 h-2.5 rounded-full" 
                      style={{ width: `${calculateProgress()}%` }}
                    ></div>
                  </div>
                </div>
              )}
              
              {/* 标签导航 */}
              <div className="border-b border-white/20">
                <nav className="flex space-x-8">
                  <button
                    onClick={() => setActiveTab('overview')}
                    className={`py-4 px-1 font-medium text-sm border-b-2 ${
                      activeTab === 'overview' 
                        ? 'border-white text-white' 
                        : 'border-transparent text-white/70 hover:text-white/90'
                    }`}
                  >
                    Course概览
                  </button>
                  <button
                    onClick={() => setActiveTab('content')}
                    className={`py-4 px-1 font-medium text-sm border-b-2 ${
                      activeTab === 'content' 
                        ? 'border-white text-white' 
                        : 'border-transparent text-white/70 hover:text-white/90'
                    }`}
                  >
                    CourseContent
                  </button>
                  <button
                    onClick={() => setActiveTab('reviews')}
                    className={`py-4 px-1 font-medium text-sm border-b-2 ${
                      activeTab === 'reviews' 
                        ? 'border-white text-white' 
                        : 'border-transparent text-white/70 hover:text-white/90'
                    }`}
                  >
                    学员评价
                  </button>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      {/* CourseContent */}
      <div className="container mx-auto px-4 py-12">
        <div className="flex flex-col lg:flex-row gap-8">
          <div className="w-full lg:w-2/3">
            {/* Course概览 */}
            {activeTab === 'overview' && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">关于本Course</h2>
                <p className="text-gray-700 dark:text-gray-300 mb-8">{course.longDescription}</p>
                
                {/* 你将学到什么 */}
                <div className="mb-8">
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">你将学到什么</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {course.whatYouWillLearn.map((item, index) => (
                      <div key={index} className="flex items-start">
                        <FiCheck className="text-green-500 mt-1 mr-3 flex-shrink-0" />
                        <span className="text-gray-700 dark:text-gray-300">{item}</span>
                      </div>
                    ))}
                  </div>
                </div>
                
                {/* 先决条件 */}
                <div className="mb-8">
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">Course先决条件</h3>
                  <div className="space-y-3">
                    {course.prerequisites.map((item, index) => (
                      <div key={index} className="flex items-start">
                        <FiChevronRight className="text-primary-500 mt-1 mr-3 flex-shrink-0" />
                        <span className="text-gray-700 dark:text-gray-300">{item}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}
            
            {/* CourseContent */}
            {activeTab === 'content' && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">CourseContent</h2>
                <div className="mb-4">
                  <p className="text-gray-700 dark:text-gray-300">
                    {course.modules.length} 个模块 • {
                      course.modules.reduce((acc, module) => acc + module.lessons.length, 0)
                    } 个课时 • 总时长 {formatDuration(course.duration)}
                  </p>
                </div>
                
                {/* 模块List */}
                <div className="space-y-4">
                  {course.modules.map((module) => (
                    <div key={module.id} className="border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden">
                      {/* 模块Title */}
                      <div 
                        className="bg-gray-100 dark:bg-gray-800 px-6 py-4 flex justify-between items-center cursor-pointer"
                        onClick={() => toggleModule(module.id)}
                      >
                        <div>
                          <h3 className="font-medium text-gray-900 dark:text-white">{module.title}</h3>
                          <p className="text-sm text-gray-500 dark:text-gray-400">
                            {module.lessons.length} 个课时 • {formatDuration(module.duration)}
                          </p>
                        </div>
                        <div className={`transform transition-transform ${expandedModules.includes(module.id) ? 'rotate-180' : ''}`}>
                          <FiChevronRight size={20} className="text-gray-500 dark:text-gray-400" />
                        </div>
                      </div>
                      
                      {/* 课时List */}
                      {expandedModules.includes(module.id) && (
                        <div className="divide-y divide-gray-200 dark:divide-gray-700">
                          {module.lessons.map((lesson) => (
                            <div key={lesson.id} className="px-6 py-4">
                              <div className="flex items-center justify-between">
                                <div className="flex items-center">
                                  {lesson.isCompleted ? (
                                    <div className="w-6 h-6 rounded-full bg-green-500 flex items-center justify-center mr-3">
                                      <FiCheck className="text-white" size={14} />
                                    </div>
                                  ) : (
                                    <div className="w-6 h-6 mr-3 flex items-center justify-center">
                                      {getLessonIcon(lesson.type)}
                                    </div>
                                  )}
                                  <div>
                                    <h4 className="text-gray-900 dark:text-white">{lesson.title}</h4>
                                    <p className="text-sm text-gray-500 dark:text-gray-400">
                                      {lesson.duration} 分钟 • {
                                        lesson.type === 'video' ? '视频' : 
                                        lesson.type === 'quiz' ? '测验' : '练习'
                                      }
                                    </p>
                                  </div>
                                </div>
                                
                                {!connected && (
                                  <div className="text-gray-400 dark:text-gray-500">
                                    <FiLock size={18} />
                                  </div>
                                )}
                              </div>
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}
            
            {/* 学员评价 */}
            {activeTab === 'reviews' && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">学员评价</h2>
                
                {/* 评分统计 */}
                <div className="flex items-center mb-8">
                  <div className="mr-6">
                    <div className="text-5xl font-bold text-gray-900 dark:text-white">{course.rating}</div>
                    <div className="flex mt-2">
                      {[...Array(5)].map((_, i) => (
                        <FiStar 
                          key={i} 
                          className={`${i < Math.floor(course.rating) ? 'text-yellow-400' : 'text-gray-300 dark:text-gray-600'}`} 
                          size={20} 
                        />
                      ))}
                    </div>
                    <div className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                      {course.reviews.length} 条评价
                    </div>
                  </div>
                </div>
                
                {/* 评价List */}
                <div className="space-y-6">
                  {course.reviews.map((review) => (
                    <div key={review.id} className="border-b border-gray-200 dark:border-gray-700 pb-6 last:border-0">
                      <div className="flex items-start">
                        <div className="w-10 h-10 rounded-full overflow-hidden mr-4">
                          {review.avatar ? (
                            <Image 
                              src={review.avatar} 
                              alt={review.user}
                              width={40}
                              height={40}
                              objectFit="cover"
                            />
                          ) : (
                            <div className="w-full h-full bg-gray-300 dark:bg-gray-700 flex items-center justify-center">
                              <FiUser />
                            </div>
                          )}
                        </div>
                        <div>
                          <div className="flex items-center mb-1">
                            <h4 className="font-medium text-gray-900 dark:text-white mr-2">{review.user}</h4>
                            <span className="text-sm text-gray-500 dark:text-gray-400">{review.date}</span>
                          </div>
                          <div className="flex mb-2">
                            {[...Array(5)].map((_, i) => (
                              <FiStar 
                                key={i} 
                                className={`${i < review.rating ? 'text-yellow-400' : 'text-gray-300 dark:text-gray-600'}`} 
                                size={16} 
                              />
                            ))}
                          </div>
                          <p className="text-gray-700 dark:text-gray-300">{review.comment}</p>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
          
          {/* 侧边栏 */}
          <div className="w-full lg:w-1/3">
            <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-6 sticky top-24">
              <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">相关Course</h3>
              <div className="space-y-4">
                <div className="flex items-start">
                  <div className="w-20 h-12 bg-gray-200 dark:bg-gray-700 rounded overflow-hidden mr-3 flex-shrink-0">
                    <div className="w-full h-full flex items-center justify-center">
                      <FiBookOpen className="text-gray-500 dark:text-gray-400" />
                    </div>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 dark:text-white text-sm">Rust 编程语言基础</h4>
                    <p className="text-xs text-gray-500 dark:text-gray-400">初级 • 4 小时</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <div className="w-20 h-12 bg-gray-200 dark:bg-gray-700 rounded overflow-hidden mr-3 flex-shrink-0">
                    <div className="w-full h-full flex items-center justify-center">
                      <FiBookOpen className="text-gray-500 dark:text-gray-400" />
                    </div>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 dark:text-white text-sm">Web3 前端开发实战</h4>
                    <p className="text-xs text-gray-500 dark:text-gray-400">中级 • 6 小时</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <div className="w-20 h-12 bg-gray-200 dark:bg-gray-700 rounded overflow-hidden mr-3 flex-shrink-0">
                    <div className="w-full h-full flex items-center justify-center">
                      <FiBookOpen className="text-gray-500 dark:text-gray-400" />
                    </div>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 dark:text-white text-sm">Solana DeFi 应用开发</h4>
                    <p className="text-xs text-gray-500 dark:text-gray-400">高级 • 8 小时</p>
                  </div>
                </div>
              </div>
              
              <div className="mt-8">
                <Link href="/courses">
                  <a className="text-primary-600 dark:text-primary-400 font-medium text-sm flex items-center">
                    View所有Course
                    <FiChevronRight className="ml-1" />
                  </a>
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// Chinese comment replaced with English comment
export default function CourseDetail() {
  return (
    <WalletContextProvider>
      <CourseDetailPage />
    </WalletContextProvider>
  );
} 