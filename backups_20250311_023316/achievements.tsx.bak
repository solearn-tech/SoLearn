import React, { useState } from 'react';
import Head from 'next/head';
import { FiAward, FiFileText, FiBarChart, FiStar, FiInfo } from 'react-icons/fi';
import { WalletContextProvider, useWallet } from '../contexts/WalletContext';

import AchievementCard, { AchievementRarity } from '../components/achievements/AchievementCard';
import CertificateCard from '../components/achievements/CertificateCard';

// Chinese comment replaced with English comment
const mockAchievements = [
  {
    id: 'ach1',
    title: '区块链探索者',
    description: '完成第一门区块链Course',
    imageUrl: '/images/achievements/explorer.jpg',
    rarity: 'common' as AchievementRarity,
    status: 'completed' as const,
    earnedDate: new Date('2023-03-15'),
    tokenReward: 10,
    xpReward: 100,
    isNFT: false
  },
  {
    id: 'ach2',
    title: 'Solana 初学者',
    description: '完成 Solana 区块链开发入门Course',
    imageUrl: '/images/achievements/solana-beginner.jpg',
    rarity: 'uncommon' as AchievementRarity,
    status: 'completed' as const,
    earnedDate: new Date('2023-03-20'),
    tokenReward: 50,
    xpReward: 200,
    isNFT: true
  },
  {
    id: 'ach3',
    title: '坚持不懈',
    description: '连续 7 天Login平台',
    imageUrl: '/images/achievements/persistence.jpg',
    rarity: 'common' as AchievementRarity,
    status: 'completed' as const,
    earnedDate: new Date('2023-03-25'),
    tokenReward: 20,
    xpReward: 50,
    isNFT: false
  },
  {
    id: 'ach4',
    title: '知识传播者',
    description: '在讨论区Post 10 个有帮助的Reply',
    imageUrl: '/images/achievements/knowledge-sharer.jpg',
    rarity: 'rare' as AchievementRarity,
    progress: 60,
    status: 'in-progress' as const,
    tokenReward: 100,
    xpReward: 300,
    requirements: [
      'Post至少 10 个讨论Reply',
      '获得至少 5 个Like'
    ],
    isNFT: false
  },
  {
    id: 'ach5',
    title: '全栈开发者',
    description: '完成前端和智能合约开发相关Course',
    imageUrl: '/images/achievements/fullstack.jpg',
    rarity: 'epic' as AchievementRarity,
    status: 'locked' as const,
    tokenReward: 200,
    xpReward: 500,
    requirements: [
      '完成 Web3 前端开发实战Course',
      '完成 Solana 程序开发Course'
    ],
    isNFT: true
  },
  {
    id: 'ach6',
    title: 'DeFi 专家',
    description: '完成所有 DeFi 相关Course',
    imageUrl: '/images/achievements/defi-expert.jpg',
    rarity: 'legendary' as AchievementRarity,
    status: 'locked' as const,
    tokenReward: 500,
    xpReward: 1000,
    requirements: [
      '完成 DeFi 基础Course',
      '完成 DeFi 协议开发Course',
      '完成 DeFi 安全Course'
    ],
    isNFT: true
  }
];

// Chinese comment replaced with English comment
const mockCertificates = [
  {
    id: 'cert1',
    title: '区块链开发入门',
    courseName: 'Solana 区块链开发入门',
    courseId: '1',
    imageUrl: '/images/certificates/blockchain-basics.jpg',
    issueDate: new Date('2023-03-15'),
    tokenId: '4a7fd67890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',
    transactionId: '5b8fe78901abcdef1234567890abcdef1234567890abcdef1234567890abcdef',
    skills: ['区块链基础', 'Solana', 'Password学'],
    issuer: {
      name: 'SoLearn',
      logo: '/images/logo.png'
    },
    isNFT: true,
    isVerified: true
  },
  {
    id: 'cert2',
    title: 'Rust 编程精通',
    courseName: 'Rust 编程语言基础',
    courseId: '2',
    imageUrl: '/images/certificates/rust-cert.jpg',
    issueDate: new Date('2023-03-25'),
    skills: ['Rust', '系统编程', '内存安全'],
    issuer: {
      name: 'SoLearn',
      logo: '/images/logo.png'
    },
    isNFT: false,
    isVerified: true
  }
];

// Chinese comment replaced with English comment
const userStats = {
  level: 5,
  xp: 850,
  xpToNextLevel: 1000,
  totalAchievements: 15,
  completedAchievements: 3,
  totalCertificates: 2,
  totalLearningHours: 48,
  coursesCompleted: 2,
  tokenBalance: 180
};

// Chinese comment replaced with English comment
const AchievementsPage = () => {
  const { connected } = useWallet();
  const [activeTab, setActiveTab] = useState('achievements');
  const [raritySortOrder, setRaritySortOrder] = useState<'asc' | 'desc'>('desc');
  const [filter, setFilter] = useState('all');
  
  // Chinese comment replaced with English comment
  const getXpProgress = () => {
    return Math.round((userStats.xp / userStats.xpToNextLevel) * 100);
  };
  
  // Chinese comment replaced with English comment
  const getFilteredAchievements = () => {
    let filtered = [...mockAchievements];
    
    // Chinese comment replaced with English comment
    if (filter !== 'all') {
      filtered = filtered.filter(achievement => achievement.status === filter);
    }
    
    // Chinese comment replaced with English comment
    filtered.sort((a, b) => {
      const rarityOrder = {
        'common': 1,
        'uncommon': 2,
        'rare': 3,
        'epic': 4,
        'legendary': 5
      };
      
      const orderA = rarityOrder[a.rarity];
      const orderB = rarityOrder[b.rarity];
      
      return raritySortOrder === 'desc' ? orderB - orderA : orderA - orderB;
    });
    
    return filtered;
  };
  
  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      <Head>
        <title>Achievement与证书 | SoLearn</title>
        <meta name="description" content="View您在 SoLearn 平台上获得的Achievement和证书" />
      </Head>

      <main className="container mx-auto px-4 py-8">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">Achievement与证书</h1>
        </div>
        
        {connected ? (
          <>
            {/* User统计Information卡片 */}
            <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-6 mb-8">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                <div className="space-y-2">
                  <div className="text-sm text-gray-500 dark:text-gray-400">等级</div>
                  <div className="flex items-end">
                    <span className="text-3xl font-bold text-gray-900 dark:text-white">{userStats.level}</span>
                    <div className="ml-2 text-xs text-gray-500 dark:text-gray-400 mb-1">
                      {userStats.xp}/{userStats.xpToNextLevel} XP
                    </div>
                  </div>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                    <div 
                      className="bg-primary-600 h-2 rounded-full" 
                      style={{ width: `${getXpProgress()}%` }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="text-sm text-gray-500 dark:text-gray-400">总Achievement</div>
                  <div className="flex items-center mt-1">
                    <FiAward className="text-purple-500 mr-2" size={20} />
                    <span className="text-2xl font-bold text-gray-900 dark:text-white">
                      {userStats.completedAchievements}/{userStats.totalAchievements}
                    </span>
                  </div>
                </div>
                
                <div>
                  <div className="text-sm text-gray-500 dark:text-gray-400">已完成Course</div>
                  <div className="flex items-center mt-1">
                    <FiFileText className="text-green-500 mr-2" size={20} />
                    <span className="text-2xl font-bold text-gray-900 dark:text-white">
                      {userStats.coursesCompleted}
                    </span>
                  </div>
                </div>
                
                <div>
                  <div className="text-sm text-gray-500 dark:text-gray-400">学习时长（小时）</div>
                  <div className="flex items-center mt-1">
                    <FiClock className="text-blue-500 mr-2" size={20} />
                    <span className="text-2xl font-bold text-gray-900 dark:text-white">
                      {userStats.totalLearningHours}
                    </span>
                  </div>
                </div>
              </div>
            </div>
            
            {/* 标签导航 */}
            <div className="mb-6">
              <div className="border-b border-gray-200 dark:border-gray-700">
                <nav className="flex space-x-8">
                  <button
                    onClick={() => setActiveTab('achievements')}
                    className={`py-4 px-1 font-medium text-sm border-b-2 ${
                      activeTab === 'achievements' 
                        ? 'border-primary-500 text-primary-600 dark:text-primary-400' 
                        : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'
                    }`}
                  >
                    <FiAward className="inline-block mr-2" />
                    Achievement
                  </button>
                  <button
                    onClick={() => setActiveTab('certificates')}
                    className={`py-4 px-1 font-medium text-sm border-b-2 ${
                      activeTab === 'certificates' 
                        ? 'border-primary-500 text-primary-600 dark:text-primary-400' 
                        : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'
                    }`}
                  >
                    <FiFileText className="inline-block mr-2" />
                    证书
                  </button>
                </nav>
              </div>
            </div>
            
            {/* Achievement标签页Content */}
            {activeTab === 'achievements' && (
              <div>
                {/* Filter和Sort */}
                <div className="flex flex-col md:flex-row justify-between md:items-center mb-6 space-y-4 md:space-y-0">
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => setFilter('all')}
                      className={`px-3 py-1 text-sm rounded-full ${
                        filter === 'all'
                          ? 'bg-primary-100 dark:bg-primary-900/30 text-primary-600 dark:text-primary-400'
                          : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
                      }`}
                    >
                      全部
                    </button>
                    <button
                      onClick={() => setFilter('completed')}
                      className={`px-3 py-1 text-sm rounded-full ${
                        filter === 'completed'
                          ? 'bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400'
                          : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
                      }`}
                    >
                      已完成
                    </button>
                    <button
                      onClick={() => setFilter('in-progress')}
                      className={`px-3 py-1 text-sm rounded-full ${
                        filter === 'in-progress'
                          ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400'
                          : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
                      }`}
                    >
                      进行中
                    </button>
                    <button
                      onClick={() => setFilter('locked')}
                      className={`px-3 py-1 text-sm rounded-full ${
                        filter === 'locked'
                          ? 'bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300'
                          : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
                      }`}
                    >
                      未解锁
                    </button>
                  </div>
                  
                  <div className="flex items-center">
                    <span className="text-sm text-gray-500 dark:text-gray-400 mr-2">Sort方式:</span>
                    <select
                      value={raritySortOrder}
                      onChange={(e) => setRaritySortOrder(e.target.value as 'asc' | 'desc')}
                      className="border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-1 pl-3 pr-8 text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 focus:ring-primary-500 focus:border-primary-500"
                    >
                      <option value="desc">稀有度 (高到低)</option>
                      <option value="asc">稀有度 (低到高)</option>
                    </select>
                  </div>
                </div>
                
                {/* Achievement卡片网格 */}
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                  {getFilteredAchievements().map(achievement => (
                    <AchievementCard 
                      key={achievement.id}
                      {...achievement}
                    />
                  ))}
                </div>
              </div>
            )}
            
            {/* 证书标签页Content */}
            {activeTab === 'certificates' && (
              <div>
                {mockCertificates.length > 0 ? (
                  <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    {mockCertificates.map(certificate => (
                      <CertificateCard 
                        key={certificate.id}
                        {...certificate}
                      />
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-12 bg-white dark:bg-gray-800 rounded-lg shadow-sm">
                    <FiFileText size={48} className="mx-auto text-gray-400 dark:text-gray-500 mb-4" />
                    <h3 className="text-xl font-medium text-gray-900 dark:text-white mb-2">还没有证书</h3>
                    <p className="text-gray-600 dark:text-gray-400 max-w-md mx-auto mb-6">
                      完成Course后，您将获得可以在区块链上验证的证书。这些证书可以作为您学习Achievement的证明。
                    </p>
                  </div>
                )}
              </div>
            )}
          </>
        ) : (
          <div className="text-center py-16 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
            <FiInfo size={48} className="mx-auto text-gray-400 dark:text-gray-500 mb-4" />
            <h2 className="text-2xl font-medium text-gray-900 dark:text-white mb-2">
              请连接钱包View您的Achievement和证书
            </h2>
            <p className="text-gray-600 dark:text-gray-400 max-w-md mx-auto mb-8">
              连接您的 Solana 钱包以View您获得的Achievement和证书，展示您的学习进度和技能认证。
            </p>
            <button
              className="px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white rounded-lg shadow-sm"
            >
              连接钱包
            </button>
          </div>
        )}
      </main>
    </div>
  );
};

// Chinese comment replaced with English comment
export default function Achievements() {
  return (
    <WalletContextProvider>
      <AchievementsPage />
    </WalletContextProvider>
  );
} 